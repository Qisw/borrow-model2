function bar_graph_qy(model_qyM, zStr, saveFigures, cS)
% Show a bar graph by [IQ, yp] quartile
%{
Formatted like Belley / Lochner figures
One graph
Group by AFQT
One bar for each yp in each group
%}

nIq = size(model_qyM, 1);
figS = const_fig_bc1;

fh = output_bc1.fig_new(saveFigures, []);

% Each row (IQ quartile) becomes a group
bar(model_qyM);

set(gca, 'XTickLabel', string_lh.vector_to_string_array(1 : nIq, '%i'));
xlabel(cS.formatS.iqGroupStr);
ylabel(zStr);

% Compute betaIq, betaYp (always unweighted)
% Only if model_qyM looks like a probability
if all(model_qyM(:) <= 1)  &&  all(model_qyM(:) >= 0)
   [betaIq, betaYp] = ...
      results_bc1.regress_qy(model_qyM, ones(size(model_qyM)), ...
      cS.iqUbV(:), cS.ypUbV(:), cS.dbg);
   text(0.1, 0.1, sprintf('betaIq: %.2f, betaYp: %.2f', betaIq, betaYp));
end


% xlabel('Parental income quartile');
% ylabel('IQ quartile');
% colormap(figS.colorMap);
% view([-135, 30]);
% zlabel(zStr);
output_bc1.fig_format(fh, 'bar');
      
end